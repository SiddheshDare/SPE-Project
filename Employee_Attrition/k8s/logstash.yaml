apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: elk-monitoring
data:
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    
    filter {
      # Application-specific processing
      if [kubernetes][container][name] == "attrition-backend" {
        grok {
          match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} - %{LOGLEVEL:log_level} - %{GREEDYDATA:log_message}" }
        }
        mutate {
          add_field => { "[@metadata][index]" => "attrition-app-%{+YYYY.MM.dd}" }
        }
      }
      # Process Kubernetes logs
      else if [kubernetes] {
        mutate {
          add_field => { "[@metadata][index]" => "k8s-logs-%{+YYYY.MM.dd}" }
        }
      }
      # Process any other system logs
      else {
        mutate {
          add_field => { "[@metadata][index]" => "system-logs-%{+YYYY.MM.dd}" }
        }
      }
    }
    
    output {
      elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "%{[@metadata][index]}"
      }
      # Debug output
      stdout { codec => rubydebug }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: elk-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:8.10.4
        ports:
        - containerPort: 5044
        volumeMounts:
        - name: logstash-config
          mountPath: /usr/share/logstash/pipeline/logstash.conf
          subPath: logstash.conf
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
      volumes:
      - name: logstash-config
        configMap:
          name: logstash-config
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: elk-monitoring
spec:
  selector:
    app: logstash
  ports:
  - port: 5044
    targetPort: 5044
  type: ClusterIP